name: Build and Deploy

on:
  push:
    paths-ignore:
      - '.gitignore'
      - '.mergify.yml'
      - 'CHANGELOG.md'
      - 'LICENSE'
      - 'README.md'
      - 'renovate.json'
  pull_request:

env:
  AZURE_FUNCTIONAPP_NAME: ADTEventBroadcast
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "adt-event-endpoint-function"
  DOTNET_VERSION: 8.0.x

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v5
      - name: Setup DotNet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Build the function
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd
      - name: Deploy to Azure Function
        # Release only where secrets are available and only in main branch.
        if: >-
          github.ref == 'refs/heads/main'
          && !github.event.repository.fork
          && (
            github.event_name != 'pull_request' 
            || github.event.pull_request.head.repo.full_name == github.repository
          )
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
         
  release:
    concurrency:
        # Allow only one release at a time.
        group: release-${{ github.event.number || github.ref }}
    needs:
      - build-and-deploy
    runs-on: ubuntu-latest
    # Release only where secrets are available.
    if: >-
      !github.event.repository.fork
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.head.repo.full_name == github.repository
      )
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
          submodules: recursive
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
        run: |
          npm install
          npx semantic-release

  success:
      runs-on: ubuntu-24.04
      needs:
        - build-and-deploy
        - release
      if: >-
        always() && (
          contains(join(needs.*.result, ','), 'failure')
          || !contains(join(needs.*.result, ','), 'cancelled')
        )
      steps:
        - name: Verify that there were no failures
          run: ${{ !contains(join(needs.*.result, ','), 'failure') }}